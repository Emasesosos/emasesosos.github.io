{"version":3,"sources":["logo.svg","componentes/Header.js","componentes/Formulario.js","componentes/Resumen.js","helper.js","componentes/Resultado.js","componentes/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","className","titulo","Formulario","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","plan","_this","current","checked","infoAuto","marca","value","year","console","log","onSubmit","this","htmlFor","name","ref","type","Component","Resumen","mostrarResumen","texto","_this$props$datos","datos","charAt","toUpperCase","slice","planAcento","Resultado","resultado","mensaje","TransitionGroup","component","CSSTransition","classNames","key","timeout","enter","exit","App","state","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","datosAuto","setState","componentes_Header","componentes_Formulario","componentes_Resumen","componentes_Resultado","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.592cd55d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\n\r\nconst Header = props => {\r\n    return(\r\n        <header className=\"top\">\r\n            <h1>{props.titulo}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Formulario extends Component {\r\n\r\n    // refs: Son para leer los valores de los campos de un formulario\r\n    marcaRef = React.createRef();\r\n    yearRef = React.createRef();\r\n    planBasicoRef = React.createRef();\r\n    planCompletoRef = React.createRef();\r\n\r\n    cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Leer el plan\r\n        const plan = this.planBasicoRef.current.checked ? 'basico' : 'completo';\r\n        \r\n        // Obtener los datos\r\n        // console.log(this.marcaRef.current.value);\r\n\r\n        // Crear el objeto\r\n        const infoAuto = {\r\n            marca: this.marcaRef.current.value,\r\n            year: this.yearRef.current.value,\r\n            plan: plan\r\n        }\r\n\r\n        // Enviarlo al componente principal\r\n        // console.log(infoAuto);\r\n        console.log('Enviando...');\r\n        this.props.cotizarSeguro(infoAuto);\r\n\r\n        // Resetear el Formulario (opcional)\r\n        // e.currentTarget.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\r\n                <div className=\"campo\">\r\n                    <label htmlFor=\"\">Marca</label>\r\n                    <select name=\"marca\" ref={this.marcaRef}>\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiático</option>\r\n                    </select>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"campo\">\r\n                    <label htmlFor=\"\">Año</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2019\">2019</option>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"campo\">\r\n                    <label htmlFor=\"\">Plan</label>\r\n                    <input type=\"radio\" ref={this.planBasicoRef} name=\"plan\" value=\"basico\"/> Básico\r\n                    <input type=\"radio\" ref={this.planCompletoRef} name=\"plan\" value=\"completo\"/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formulario;","import React, { Component } from 'react';\r\nimport { primeraMayuscula, planAcento } from './../helper';\r\n\r\nclass Resumen extends Component {\r\n\r\n    mostrarResumen = () => {\r\n        const {marca, plan, year} = this.props.datos;\r\n\r\n        if (!marca || !year || !plan) return null;\r\n\r\n        return(\r\n            <div className=\"resumen\">\r\n                <h2>Resumen de Cotización</h2>\r\n                <li>Marca: {primeraMayuscula(marca)}</li>\r\n                <li>Plan: {planAcento(plan)}</li>\r\n                <li>Año del Auto: {year}</li>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.mostrarResumen()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Resumen;","export function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calcularMarca(modelo) {\r\n    let incremento;\r\n\r\n    switch (modelo) {\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n\r\n}\r\n\r\nexport function obtenerPlan(plan) {\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\nexport function primeraMayuscula(texto) {\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}\r\n\r\nexport function planAcento(texto) {\r\n    return (texto === 'basico') ? 'Básico' : 'Completo';\r\n}","import React, { Component } from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Resultado extends Component {\r\n    render() {\r\n        const resultado = this.props.resultado;\r\n        const mensaje = (!resultado) ? 'Elige Marca, Año y Tipo de Seguro' :\r\n                                       'El total es: $';\r\n        return(\r\n            <div className=\"gran-total\">\r\n                {mensaje}\r\n                <TransitionGroup component=\"span\" className=\"resultado\">\r\n                    <CSSTransition \r\n                                    classNames=\"resultado\" \r\n                                    key={resultado}\r\n                                    timeout={{enter: 500, exit: 500}}>\r\n                        <span>{resultado}</span>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","import React, { Component } from 'react';\r\nimport logo from './../logo.svg';\r\nimport Header from './Header';\r\nimport Formulario from './Formulario';\r\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from './../helper';\r\nimport Resumen from './Resumen';\r\nimport Resultado from './Resultado';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    resultado: '',\r\n    datos: {}\r\n  }\r\n\r\n  cotizarSeguro = (datos) => {\r\n\r\n    console.log(datos);\r\n    const { marca, plan, year } = datos;\r\n\r\n    // ***** Agregar una base de 2000\r\n    let resultado = 2000;\r\n\r\n    // ***** Obtener la diferencia de año\r\n    const diferencia = obtenerDiferenciaAnio(year);\r\n    // console.log('La diferencia es: ' + diferencia);\r\n\r\n    // ***** Por cada año restar el 3%\r\n    resultado -= ((diferencia * 3) * resultado) / 100;\r\n    // console.log(resultado);\r\n\r\n    // ***** Americano 15% Asiatico 5% y Europeo 30% de incremento al valor actual\r\n    resultado *= calcularMarca(marca);\r\n    // console.log(resultado);\r\n\r\n    // ***** Plan Auto , Básico +20% y Americano +50%\r\n    let incrementoPlan = obtenerPlan(plan);\r\n\r\n    // ***** Dependiendo Plan incrementar\r\n    resultado  = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n    console.log(resultado);\r\n\r\n    // Crear objeto para el Resumen\r\n    const datosAuto = {\r\n      marca: marca,\r\n      plan: plan,\r\n      year: year\r\n    }\r\n\r\n    // Ya se tiene el costo\r\n    this.setState({\r\n      resultado: resultado,\r\n      datos: datosAuto\r\n    })\r\n\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App contenedor\">\r\n\r\n          <Header\r\n                  titulo= 'Cotizador de Seguro de Auto'\r\n          ></Header>\r\n\r\n          <div className=\"contenedor-formulario\">\r\n\r\n            <Formulario \r\n                        cotizarSeguro = {this.cotizarSeguro} \r\n            ></Formulario>\r\n\r\n            <Resumen\r\n                      datos={this.state.datos}\r\n            ></Resumen>\r\n\r\n            <Resultado\r\n                        resultado={this.state.resultado}\r\n            ></Resultado>\r\n\r\n          </div>\r\n\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n      </div>      \r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport './css/App.css';\r\nimport App from './componentes/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App /> , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}