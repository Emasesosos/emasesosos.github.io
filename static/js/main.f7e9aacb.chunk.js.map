{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","Helper.js","componentes/Presupuesto.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/Imagen.js","componentes/App.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","props","react_default","a","createElement","titulo","FormularioGasto","nombreGasto","React","createRef","cantidadGasto","crearGasto","e","preventDefault","gasto","_this","current","value","agregarGasto","action","onSubmit","this","className","htmlFor","ref","type","placeholder","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","componentes_Gasto","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Presupuesto","Restante","clase","restante","revisarPresupuesto","ControlPresupuesto","Fragment","componentes_Presupuesto","componentes_Restante","Imagen","src","logo","alt","App","state","obtenerPresupuesto","prompt","setState","objectSpread","concat","Date","now","restarPresupuesto","cantidad","restar","Number","console","log","String","componentes_Header","Formulario","componentes_Listado","componentes_ControlPresupuesto","componentes_Imagen","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f7e9aacb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header>\r\n            <h1>{props.titulo}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FormularioGasto extends Component {\r\n\r\n    // Refs para los campos del formulario\r\n    nombreGasto = React.createRef();\r\n    cantidadGasto = React.createRef();\r\n\r\n    crearGasto = (e) => {\r\n\r\n        // ***** Prevenir el default\r\n        e.preventDefault();\r\n\r\n        // ***** Crear el objeto con los datos\r\n        const gasto = {\r\n            nombreGasto: this.nombreGasto.current.value,\r\n            cantidadGasto: this.cantidadGasto.current.value\r\n        }\r\n        // console.log(gasto);\r\n        \r\n        // ***** Agregarlo y enviarlo por props\r\n        this.props.agregarGasto(gasto);\r\n\r\n        // ***** Resetear el formulario (opcional)\r\n        // e.currentTarget.reset();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form action=\"\" onSubmit={this.crearGasto}>\r\n                <h2>Agrega tus gastos aqu√≠</h2>\r\n                <div className=\"campo\">\r\n                    <label htmlFor=\"\">Nombre Gasto</label>\r\n                    <input ref={this.nombreGasto} type=\"text\" className=\"u-full-width\" placeholder=\"Ej. Transporte\"/>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label htmlFor=\"\">Cantidad</label>\r\n                    <input ref={this.cantidadGasto} type=\"text\" className=\"u-full-width\" placeholder=\"Ej. 300\"/>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"button-primary u-full-width\" value=\"Agregar\"/>\r\n            </form>\r\n        )\r\n    } \r\n}\r\n\r\nFormularioGasto.propTypes =  {\r\n    agregarGasto: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FormularioGasto; ","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Gasto extends Component {\r\n    render() {\r\n        const { nombreGasto, cantidadGasto } = this.props.gasto;\r\n        // console.log(nombreGasto);\r\n        // console.log(cantidadGasto);\r\n        return(\r\n            <li className=\"gastos\">\r\n                <p>\r\n                    {nombreGasto}\r\n                    <span className=\"gasto\">$ {cantidadGasto}</span>\r\n                </p>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired,  \r\n}\r\n\r\nexport default Gasto;","import React, { Component } from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Listado extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"gastos-realizados\">\r\n                {/* console.log(this.props.gastos) */}\r\n                <h2>Listado</h2>\r\n                {Object.keys(this.props.gastos).map(key => (\r\n                    // console.log(key)\r\n                    <Gasto\r\n                            key={key}\r\n                            gasto={this.props.gastos[key]}\r\n                    ></Gasto>\r\n                ))}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nListado.propTypes = {\r\n    gastos: PropTypes.object.isRequired,  \r\n}\r\n\r\nexport default Listado; ","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto, 10) || 0;\r\n\r\n    if(totalPresupuesto > 0) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n    // Comprobar el 25%\r\n    if((presupuesto/4) > restante) {\r\n        clase = 'alert alert-danger';\r\n    } else if ((presupuesto/2) > restante) {\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    \r\n    return clase;\r\n    \r\n}","import React , { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Presupuesto extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {this.props.presupuesto}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Presupuesto; ","import React, { Component } from 'react';\r\nimport { revisarPresupuesto } from './../Helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Restante extends Component {\r\n    render(){\r\n        const presupuesto = this.props.presupuesto;\r\n        const restante = this.props.restante;\r\n        const clase = revisarPresupuesto(presupuesto, restante);\r\n        // console.log(clase);\r\n        return(\r\n            <div className={clase}>\r\n                Restante: $ {this.props.restante}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRestante.propTypes = {\r\n    presupuesto: PropTypes.string.isRequired,\r\n    restante: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Restante;  ","import React, { Component } from 'react';\r\nimport Presupuesto from './Presupuesto';\r\nimport Restante from './Restante';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ControlPresupuesto extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <React.Fragment>\r\n                    <Presupuesto\r\n                                    presupuesto={this.props.presupuesto}\r\n                    ></Presupuesto>\r\n                    <Restante\r\n                                presupuesto={this.props.presupuesto}\r\n                                restante={this.props.restante}\r\n                    ></Restante>\r\n                </React.Fragment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.string.isRequired,\r\n    restante: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ControlPresupuesto;","import React, { Component } from 'react';\r\nimport logo from './../logo.svg';\r\n\r\nclass Imagen extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Imagen;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Formulario from './Formulario';\r\nimport Listado from './Listado';\r\nimport { validarPresupuesto } from './../Helper';\r\nimport ControlPresupuesto from './ControlPresupuesto';\r\nimport Imagen from './Imagen';\r\nimport './../css/App.css';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    presupuesto: '',\r\n    restante: '',\r\n    gastos: {}\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.obtenerPresupuesto();\r\n  }\r\n\r\n  obtenerPresupuesto = () => {\r\n    let presupuesto = prompt('¬øCu√°l es el presupuesto?');\r\n    // console.log(presupuesto);\r\n    let resultado = validarPresupuesto(presupuesto);\r\n    \r\n    if(resultado) {\r\n      //console.log('V√°lido');\r\n      this.setState({\r\n        presupuesto: presupuesto,\r\n        restante: presupuesto,\r\n      })\r\n\r\n    } else {\r\n      // console.log('Presupuesto no v√°lido');\r\n      this.obtenerPresupuesto();\r\n    }\r\n\r\n  }\r\n\r\n  // ***** Agregar un nuevo gasto al state\r\n  agregarGasto = gasto => {\r\n    // ***** Tomar una copia del state actual\r\n    const gastos = { ...this.state.gastos };\r\n    /*\r\n    const { nombreGasto, cantidadGasto } = gasto;\r\n    console.log('Se agreg√≥ el gasto ' + gasto);\r\n    console.log(gastos);\r\n    console.log(nombreGasto);\r\n    console.log(cantidadGasto);\r\n    */\r\n\r\n    // ***** Agregar al gasto el objeto del state\r\n    gastos[`gasto${Date.now()}`] = gasto;\r\n    // console.log(gastos);\r\n    // console.log(gasto);\r\n    this.restarPresupuesto(gasto.cantidadGasto);\r\n\r\n    // ***** Ponerlo en state\r\n    this.setState({\r\n      gastos\r\n    })\r\n\r\n  }\r\n\r\n  // Restar del presupuesto cuando un gasto se crea\r\n  restarPresupuesto = cantidad => {\r\n    // ***** Leer el gasto\r\n    // console.log(typeof cantidad);\r\n    let restar = Number(cantidad);\r\n\r\n    // ***** Tomar una copia del state actual\r\n    let restante = this.state.restante;\r\n\r\n    // ***** Lo restamos\r\n    restante -= restar;\r\n    console.log(restante);\r\n    restante = String(restante);\r\n    // ***** Agregamos el nuevo state\r\n    this.setState({\r\n      restante,\r\n      //restante: restante,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <Header\r\n                titulo='Gasto Semanal'\r\n        ></Header>\r\n\r\n        <div className=\"contenido-principal contenido\">\r\n          <div className=\"row\">\r\n            <div className=\"one-half column\">\r\n              <Formulario\r\n                          agregarGasto = {this.agregarGasto}\r\n              ></Formulario>\r\n            </div>\r\n            <div className=\"one-half column\">\r\n              <Listado\r\n                        gastos={this.state.gastos}\r\n              ></Listado>\r\n              <ControlPresupuesto\r\n                                  presupuesto={this.state.presupuesto}\r\n                                  restante={this.state.restante}\r\n              ></ControlPresupuesto>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Imagen></Imagen>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './componentes/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}